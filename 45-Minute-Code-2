import java.util.*;
public class RecursiveChallengeSearch {
	
	public static int search(int []a, int poslow, int poshigh, int value)
	{
		int mid = (poslow + poshigh) / 2;
		int origmid = a.length / 2;
		if(a[mid] == value)
		{
			return 1;
		}
		else if(mid >= poslow && mid<=origmid)
		{
			if(mid == 0)
			{
				return search(a,origmid-1,origmid,value);
			}
			if(mid == origmid - 1)
			{
				return search(a,origmid-1,a.length-1,value);
			}
			return search(a,poslow,mid,value);
		}
		else if(mid <= a.length-1)
		{
			if(mid == origmid+1)
			{
				return search(a,origmid,a.length,value);
			}
			else if(mid == a.length-1)
			{
				return -1;
			}
			return search(a,mid,poshigh,value);
		}
		else
			return -1;


	}
	public static void main(String args[])
    {
        RecursiveChallengeSearch ob = new RecursiveChallengeSearch();
        int arr[] = {1,2,3,4,5,6,7};
        int leng = arr.length;
        int x = 6;
        if (ob.search(arr,0,leng,x) == 1)
        {
        	System.out.println("Element is in the array");
        }
        else if (ob.search(arr,0,leng,x) == -1)
        {
        	System.out.println("Element is not found");
        }
        else
        {
        	System.out.println("Search Failed");
        }
    }
}
